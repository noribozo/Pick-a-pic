{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","upDatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","CartItem","iconClassName","onClick","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","console","log","Image","img","some","getClass","i","Photos","imageElements","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEMA,EAAUC,IAAMC,gBAEtB,SAASC,EAAT,GAAsC,IAAZC,EAAW,EAAXA,SAAW,EACCC,mBAAS,IADV,mBAC1BC,EAD0B,KACfC,EADe,OAECF,mBAAS,IAFV,mBAE1BG,EAF0B,KAEfC,EAFe,KAkCjC,OA5BAC,qBAAW,WACPC,MAHQ,gGAIHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIR,EAAaQ,QAChC,IAyBC,cAACf,EAAQgB,SAAT,CAAkBC,MAAO,CAAEX,YAAWY,eAvB1C,SAAwBC,GACpB,IAAMC,EAAad,EAAUe,KAAI,SAAAC,GAC7B,OAAIA,EAAMH,KAAOA,EACN,2BAAKG,GAAZ,IAAmBC,YAAaD,EAAMC,aAEnCD,KAEXf,EAAaa,IAgByCZ,YAAWgB,UAbrE,SAAmBC,GACfhB,GAAa,SAAAiB,GAAS,4BAAQA,GAAR,CAAmBD,QAYmCE,eAThF,SAAwBR,GACpBV,GAAc,SAAAiB,GAAS,OAAIA,EAAUE,QAAQ,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,SAQ2BW,UALhG,WACIrB,EAAa,MAIb,SACKL,ICpBE2B,MAhBf,WAAmB,IAETC,EADcC,qBAAWjC,GAAxBQ,UACyB0B,OAAS,EAAI,wBAA0B,wBAEvE,OACI,mCACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,8CAEJ,cAAC,IAAD,CAAMA,GAAG,QAAT,SACI,mBAAGC,UAAS,UAAKJ,EAAL,wBCYbK,MAxBf,WAAqB,IAAD,EACehC,oBAAS,GADxB,mBACRiC,EADQ,KACCC,EADD,KAETC,EAAMC,iBAAO,MAEnB,SAASC,IACJH,GAAW,GAGhB,SAASI,IACLJ,GAAW,GAaf,OAVA7B,qBAAW,WACP8B,EAAII,QAAQC,iBAAiB,aAAcH,GAC3CF,EAAII,QAAQC,iBAAiB,aAAcF,KAKzC,IAGC,CAACL,EAASE,ICIPM,MAvBf,YAA4B,IAARjB,EAAO,EAAPA,KAAO,EACAQ,IADA,mBAChBC,EADgB,KACPE,EADO,KAEhBb,EAAkBM,qBAAWjC,GAA7B2B,eACDoB,EAAgBT,EAAU,qBACA,qBAChC,OACI,sBAAKF,UAAU,YAAf,UACI,mBAAGA,UAAWW,EACVC,QAAS,kBAAMrB,EAAeE,EAAKV,KACnCqB,IAAKA,IAET,qBAAKS,IAAKpB,EAAKqB,IAAKC,MAAM,UAC1B,0CCiBGC,MA9Bf,WAAiB,IAAD,EACwB/C,mBAAS,eADjC,mBACLgD,EADK,KACOC,EADP,OAEmBrB,qBAAWjC,GAAnCQ,EAFK,EAELA,UAAWsB,EAFN,EAEMA,UAEZyB,GADY,KAAO/C,EAAU0B,QACAsB,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,QACnFC,EAAmBnD,EAAUa,KAAI,SAAAQ,GAAI,OACvC,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKV,OAWxB,OACA,uBAAMiB,UAAU,YAAhB,UACI,0CACCuB,EACD,oBAAGvB,UAAU,aAAb,oBAAkCmB,KAChC/C,EAAU0B,OAAS,EACjB,qBAAKE,UAAU,eAAf,SACI,wBAAQY,QAfpB,WACIM,EAAc,eACdM,YAAY,WACRC,QAAQC,IAAI,iBACZR,EAAc,eACdxB,MACD,MASK,SAA8BuB,MAElC,oECgBGU,MAzCf,YAAmC,IAAlB3B,EAAiB,EAAjBA,UAAW4B,EAAM,EAANA,IAAM,EACP3B,IADO,mBACvBC,EADuB,KACdE,EADc,OAEiCP,qBAAWjC,GAAnEkB,EAFuB,EAEvBA,eAAgBM,EAFO,EAEPA,UAAWhB,EAFJ,EAEIA,UAAWmB,EAFf,EAEeA,eAoB7C,OACI,sBAAKS,UAAS,UAAKA,EAAL,oBACdI,IAAKA,EADL,UAEI,qBAAKS,IAAKe,EAAId,IAAKd,UAAU,eApB9B4B,EAAIzC,WACI,mBAAGa,UAAU,yBACZY,QAAS,kBAAK9B,EAAe8C,EAAI7C,OACnCmB,EACC,mBAAGF,UAAU,yBACZY,QAAS,kBAAK9B,EAAe8C,EAAI7C,YAFtC,EAOeX,EAAUyD,MAAK,SAAApC,GAAI,OAAEA,EAAKV,KAAK6C,EAAI7C,MAE9C,mBAAGiB,UAAU,6BAA6BY,QAAS,kBAAKrB,EAAeqC,EAAI7C,OAC7EmB,EACE,mBAAGF,UAAU,0BAA0BY,QAAS,kBAAKxB,EAAUwC,WADpE,MCvBP,SAASE,EAASC,GACrB,OAAGA,EAAI,IAAM,EACF,MACAA,EAAI,IAAM,EACV,YADJ,ECcIC,MAZf,WAAmB,IAETC,EADcpC,qBAAWjC,GAAxBM,UACyBe,KAAI,SAAC2C,EAAKG,GAAN,OAChC,cAAC,EAAD,CAAoBH,IAAKA,EAAK5B,UAAW8B,EAASC,IAAtCH,EAAI7C,OAEpB,OACI,sBAAMiB,UAAU,SAAhB,SACKiC,K,MCaEC,MAjBf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,aCLKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChF,EAAD,UACE,cAAC,IAAD,UACA,cAAC,EAAD,UAKJiF,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.573b2f5b.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider({children}) {\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [cartItems, setCartItems] = useState([])\r\n\r\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\r\n\r\n    useEffect( () => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, [])\r\n\r\n    function toggleFavorite(id){\r\n        const upDatedArr = allPhotos.map(photo => {\r\n            if (photo.id === id){\r\n                return { ...photo, isFavorite: !photo.isFavorite}\r\n            }\r\n            return photo\r\n        })\r\n        setAllPhotos(upDatedArr)\r\n    }\r\n\r\n    function addToCart(newItem) {\r\n        setCartItems(prevItems => [...prevItems, newItem])\r\n    }\r\n\r\n    function removeFromCart(id){\r\n        setCartItems( prevItems => prevItems.filter( item => item.id !== id))\r\n    }\r\n\r\n    function emptyCart() {\r\n        setCartItems([])\r\n    }\r\n\r\n    return(\r\n        <Context.Provider value={{ allPhotos, toggleFavorite, cartItems, addToCart, removeFromCart, emptyCart}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}\r\n","import React, {useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Context} from \"../Context\";\r\n\r\nfunction Header() {\r\n    const {cartItems} = useContext(Context)\r\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\r\n\r\n    return(\r\n        <header>\r\n            <Link to=\"/\">\r\n                <h2>Pick a Pic</h2>\r\n            </Link>\r\n            <Link to=\"/cart\">\r\n                <i className={`${cartClassName} ri-fw ri-2x`}></i>\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {useState, useEffect, useRef} from \"react\";\r\n\r\nfunction useHover() {\r\n     const [hovered, setHovered] = useState(false)\r\n     const ref = useRef(null)\r\n\r\n     function enter() {\r\n          setHovered(true)\r\n     }\r\n\r\n     function leave() {\r\n         setHovered(false)\r\n     }\r\n\r\n     useEffect( () => {\r\n         ref.current.addEventListener(\"mouseenter\", enter)\r\n         ref.current.addEventListener(\"mouseleave\", leave)\r\n\r\n         /*return () => {ref.current.removeEventListener(\"mouseenter\", enter)\r\n                ref.current.removeEventListener(\"mouseleave\", leave)\r\n             }*/\r\n        }, [])\r\n\r\n\r\n     return [hovered, ref]\r\n}\r\nexport default useHover","import React, {useState, useContext} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Context} from \"../Context\";\r\nimport useHover from \"../hooks/useHover\"\r\n\r\nfunction CartItem ({item}) {\r\n    const [hovered, ref] = useHover()\r\n    const {removeFromCart} = useContext(Context)\r\n    const iconClassName = hovered ? \"ri-delete-bin-fill\" :\r\n                                    \"ri-delete-bin-line\"\r\n    return(\r\n        <div className=\"cart-item\">\r\n            <i className={iconClassName}\r\n                onClick={() => removeFromCart(item.id)}\r\n                ref={ref}>\r\n            </i>\r\n            <img src={item.url} width=\"230px\" />\r\n            <p>$5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nCartItem.propTypes = {\r\n    item : PropTypes.shape({\r\n        url: PropTypes.string.isRequired\r\n    })\r\n}\r\n\r\nexport default CartItem","import React, {useState, useContext} from \"react\";\r\nimport {Context} from \"../Context\";\r\nimport CartItem from \"../components/CartItem\";\r\n\r\nfunction Cart() {\r\n    const [buttonText, setButtonText] = useState(\"Place Order\")\r\n    const {cartItems, emptyCart} = useContext(Context)\r\n    const totalCost = 5.99 * cartItems.length\r\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n\r\n    function placeOrder() {\r\n        setButtonText(\"Ordering...\")\r\n        setTimeout( () => {\r\n            console.log(\"Order placed!\")\r\n            setButtonText(\"Place Order\")\r\n            emptyCart()\r\n        }, 3000)\r\n    }\r\n    return(\r\n    <main className=\"cart-page\">\r\n        <h1>Checkout</h1>\r\n        {cartItemElements}\r\n        <p className=\"total-cost\">Total: {totalCostDisplay}</p>\r\n        { cartItems.length > 0 ? \r\n            <div className=\"order-button\">\r\n                <button onClick={placeOrder}>{buttonText}</button>\r\n            </div> : \r\n            <p>You have no items in your cart.</p>}\r\n    </main>)\r\n}\r\n\r\nexport default Cart","import React, {useState, useContext} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Context} from \"../Context\"\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nfunction Image ({className, img}) {\r\n    const [hovered, ref] = useHover()\r\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\r\n\r\n    function heartIcon() {\r\n        if(img.isFavorite) {\r\n            return <i className=\"ri-heart-fill favorite\" \r\n                    onClick={()=> toggleFavorite(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-heart-line favorite\" \r\n                    onClick={()=> toggleFavorite(img.id)}></i>\r\n        }\r\n    }\r\n\r\n    function cartIcon() {\r\n        const alreadyInCart = cartItems.some(item=>item.id===img.id)\r\n        if(alreadyInCart) {\r\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={()=> removeFromCart(img.id)}></i>\r\n        }else if(hovered) {\r\n            return <i className=\"ri-add-circle-line cart\" onClick={()=> addToCart(img)}></i>\r\n        }\r\n    }\r\n    return(\r\n        <div className={`${className} image-container`}\r\n        ref={ref}>\r\n            <img src={img.url} className=\"image-grid\"/>\r\n            {heartIcon()}\r\n            {cartIcon()}\r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes = {\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\nexport default Image","export function getClass(i) {\r\n    if(i % 5 === 0){\r\n        return 'big';\r\n    } else if (i % 6 === 0){\r\n        return 'wide';\r\n    }\r\n}","import React, {useContext} from \"react\";\r\nimport Image from \"../components/Image\";\r\nimport {Context} from \"../Context\";\r\nimport {getClass} from \"../utils/index\";\r\n\r\nfunction Photos() {\r\n    const {allPhotos} = useContext(Context)\r\n    const imageElements = allPhotos.map((img, i) => (\r\n        <Image key={img.id} img={img} className={getClass(i)} />\r\n    ))\r\n    return(\r\n        <main className=\"photos\">\r\n            {imageElements}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos\r\n","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Cart from \"./pages/Cart\";\nimport Photos from \"./pages/Photos\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Photos />\n        </Route>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {ContextProvider} from './Context'\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>  \n      <App />\n    </Router>\n    </ContextProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}